using System.Collections;
using System.Collections.Generic;
using System.IO;
using TMPro;
using UnityEngine;

public class CentrelineManager : MonoBehaviour
{
    [SerializeField] string centrelinesPath;
    [SerializeField] GameObject centrelinesPrefab;
    [SerializeField] Material centrelineActiveMaterial;
    [SerializeField] Material centrelineUnactiveMaterial;
    [SerializeField] private GameObject activeCentreline;
    public List<GameObject> centrelinesList = new List<GameObject>();
    public List<GameObject> activeToggleCentrelinesList = new List<GameObject>();
    private string[] centrelineStrings =    { "3.40645 -1.8312 10.5258 3.4069 -1.82991 10.5185 3.40817 -1.82607 10.497 \r\n3.41016 -1.81974 10.4615 3.41277 -1.81098 10.4125 3.4159 -1.79986 10.3505 \r\n3.41944 -1.78641 10.2757 3.4233 -1.77072 10.1887 3.42737 -1.75283 10.0897 \r\n3.43155 -1.7328 9.97925 3.43574 -1.71069 9.85769 3.43983 -1.68656 9.72542 \r\n3.44373 -1.66047 9.58284 3.44733 -1.63247 9.43036 3.45053 -1.60263 9.26836 \r\n3.45323 -1.571 9.09725 3.45532 -1.53764 8.91743 3.45671 -1.50262 8.72929 \r\n3.45729 -1.46598 8.53323 3.45697 -1.42778 8.32966 3.45562 -1.38809 8.11897 \r\n3.45317 -1.34697 7.90155 3.4495 -1.30447 7.67781 3.44451 -1.26064 7.44814 \r\n3.4381 -1.21556 7.21295 3.43018 -1.16927 6.97264 3.42062 -1.12184 6.72759 \r\n3.40934 -1.07332 6.47821 3.39624 -1.02377 6.22489 3.3812 -0.973253 5.96805 \r\n3.36414 -0.921826 5.70806 3.34494 -0.869545 5.44534 3.3235 -0.816471 5.18028 \r\n3.29973 -0.762661 4.91328 3.27352 -0.708173 4.64474 3.24476 -0.653066 4.37506 \r\n3.21337 -0.597399 4.10463 3.17922 -0.54123 3.83385 3.14223 -0.484616 3.56312 \r\n3.1023 -0.427618 3.29284 3.05931 -0.370292 3.02341 3.01316 -0.312698 2.75523 \r\n2.96377 -0.254894 2.4887 2.91101 -0.196938 2.2242 2.8548 -0.138888 1.96215 \r\n2.79502 -0.0808041 1.70294 2.73158 -0.0227433 1.44697 2.66438 0.0352356 1.19464 \r\n2.59331 0.0930741 0.946339 2.51827 0.150714 0.702475 2.43916 0.208097 0.463444 \r\n2.35588 0.265164 0.229643 2.26832 0.321857 0.00147265 2.17639 0.378118 -0.22067 \r\n2.07997 0.433888 -0.436387 1.97898 0.489109 -0.645278 1.8733 0.543723 -0.846947 \r\n1.76284 0.59767 -1.04099 1.64749 0.650893 -1.22702 1.52716 0.703333 -1.40463 \r\n1.40173 0.754932 -1.57342 1.27111 0.805631 -1.733 1.1352 0.855373 -1.88296 \r\n0.993886 0.904097 -2.02291 0.847077 0.951747 -2.15245 0.694668 0.998264 -2.27118 \r\n0.536556 1.04359 -2.3787 0.37264 1.08766 -2.47462 0.202817 1.13043 -2.55853 \r\n0.0269866 1.17183 -2.63004 -0.154955 1.2118 -2.68875 -0.34291 1.2502 -2.73453 \r\n-0.535939 1.28648 -2.76842 -0.732878 1.31999 -2.79177 -0.93256 1.35009 -2.80593 \r\n-1.13382 1.37612 -2.81225 -1.3355 1.39744 -2.81207 -1.53649 1.41343 -2.80676 \r\n-1.7366 1.42389 -2.79785 -1.93622 1.42887 -2.78703 -2.13575 1.42844 -2.77596 \r\n-2.33553 1.42274 -2.76595 -2.53543 1.41238 -2.75603 -2.73511 1.39811 -2.74435 \r\n-2.93426 1.38071 -2.72907 -3.13256 1.36095 -2.70834 -3.32978 1.33958 -2.6809 \r\n-3.52693 1.31708 -2.65381 -3.72529 1.29369 -2.63683 -3.92448 1.26959 -2.63072 \r\n-4.12383 1.24493 -2.63462 -4.32264 1.21987 -2.64768 -4.52034 1.19478 -2.66881 \r\n-4.71848 1.17409 -2.69169 -4.91758 1.15751 -2.71234 -5.11706 1.14178 -2.7293 \r\n-5.31633 1.12369 -2.74112 -5.51483 1.09998 -2.74635 -5.71199 1.06753 -2.74368 \r\n-5.90761 1.02567 -2.73506 -6.10184 0.976459 -2.72603 -6.29481 0.92191 -2.72227 \r\n-6.485 0.860887 -2.72971 -6.67154 0.791951 -2.74817 -6.85635 0.717243 -2.7693 \r\n-7.04155 0.639278 -2.7842 -7.23239 0.579531 -2.78312 -7.42837 0.540729 -2.77505 \r\n-7.6208 0.484903 -2.77497 -7.81023 0.417091 -2.77683 -7.99726 0.342453 -2.77452 \r\n-8.18226 0.264824 -2.76368 -8.36511 0.184377 -2.74478 -8.54556 0.100657 -2.71911 \r\n-8.72338 0.0132116 -2.68797 -8.89834 -0.0784139 -2.65266 -9.07021 -0.174673 -2.61447 \r\n-9.23864 -0.276407 -2.5756 -9.40228 -0.387677 -2.54578 -9.56396 -0.502179 -2.51773 \r\n-9.72849 -0.60929 -2.47763 -9.89563 -0.71211 -2.43617 -10.0647 -0.813604 -2.40077 \r\n-10.2341 -0.915807 -2.37016 -10.4023 -1.02062 -2.34183 -10.5676 -1.12996 -2.31327 \r\n-10.7284 -1.24571 -2.28197 -10.883 -1.36978 -2.24543 -11.0322 -1.49914 -2.20036 \r\n-11.1871 -1.6101 -2.14028 -11.3558 -1.68521 -2.06375 -11.459 -1.71429 -1.89292 \r\n-11.5678 -1.75905 -1.73295 -11.6775 -1.79814 -1.57004 -11.7838 -1.84349 -1.40581 \r\n-11.8838 -1.90842 -1.244 -11.9759 -1.9942 -1.08627 -12.0591 -2.09802 -0.933529 \r\n-12.1324 -2.21704 -0.786718 -12.1948 -2.34844 -0.646748 -12.2529 -2.48048 -0.508437 \r\n-12.3237 -2.59184 -0.358895 -12.4032 -2.68953 -0.201932 -12.4845 -2.78519 -0.0441603 \r\n-12.5637 -2.88523 0.110765 -12.6414 -2.9894 0.262964 -12.7186 -3.09698 0.412803 \r\n-12.7962 -3.20728 0.560649 -12.8754 -3.31876 0.707245 -12.9576 -3.42615 0.855026 \r\n-13.0448 -3.52332 1.00682 -13.1335 -3.61573 1.16067 -13.2156 -3.71969 1.31008 \r\n-13.2916 -3.83408 1.45566 -13.3633 -3.95473 1.59923 -13.4326 -4.07746 1.74265 \r\n-13.5014 -4.19809 1.88774 -13.5714 -4.31403 2.03533 -13.6446 -4.42857 2.18233 \r\n-13.721 -4.54475 2.32658 -13.7988 -4.66351 2.4681 -13.876 -4.78567 2.60706 \r\n-13.9504 -4.91203 2.74365 -14.0202 -5.04343 2.87801 -14.0836 -5.18016 3.01056 \r\n-14.1458 -5.31569 3.1446 -14.2161 -5.43882 3.28543 -14.2907 -5.55455 3.43076 \r\n-14.3536 -5.68415 3.56984 -14.4163 -5.81924 3.70414 -14.4877 -5.95274 3.83524 \r\n-14.5582 -6.0922 3.96046 -14.6225 -6.23985 4.07982 -14.68 -6.39324 4.19543 \r\n-14.73 -6.55413 4.30366 -14.7805 -6.71885 4.40559 -14.8432 -6.86968 4.52079 \r\n-14.9127 -7.01431 4.6414 -14.9802 -7.16509 4.75477 -15.0411 -7.32225 4.86275 \r\n-15.0967 -7.48245 4.96923 -15.151 -7.64423 5.07447 -15.2092 -7.80931 5.17173 \r\n-15.2712 -7.98384 5.2481 -15.313 -8.16679 5.31768 -15.3564 -8.34812 5.39093 \r\n-15.415 -8.52335 5.46901 -15.4852 -8.69267 5.55096 -15.5627 -8.85697 5.63562 \r\n-15.6396 -9.02099 5.72072 -15.7141 -9.18849 5.80093 -15.7939 -9.35793 5.8714 \r\n-15.8751 -9.5298 5.93507 -15.9534 -9.70468 5.99501 -16.0265 -9.88209 6.0545 \r\n-16.1167 -10.0484 6.11863 -16.1902 -10.2225 6.18191 -16.2466 -10.4053 6.24397 \r\n-16.3008 -10.5893 6.30671 -16.3672 -10.7671 6.37199 -16.4497 -10.9366 6.44019 \r\n-16.5417 -11.1012 6.51015 -16.6361 -11.2644 6.58063 -16.7258 -11.4296 6.65042 \r\n-16.8036 -11.6005 6.71829 -16.8625 -11.7799 6.78406 -16.9046 -11.9638 6.85148 \r\n-16.9412 -12.1503 6.91462 -16.9682 -12.3397 6.97393 -16.987 -12.5311 7.03111 \r\n-17.0088 -12.7216 7.08857 -17.0444 -12.9086 7.14863 -17.0929 -13.0923 7.21186 \r\n-17.1458 -13.2744 7.27768 -17.1946 -13.4569 7.34549 -17.2375 -13.6401 7.41466 \r\n-17.2776 -13.8237 7.4845 -17.3176 -14.007 7.55434 -17.3606 -14.1898 7.62349 \r\n-17.4096 -14.3714 7.69129 -17.4653 -14.552 7.75747 -17.5194 -14.7334 7.82362 \r\n-17.5678 -14.9162 7.89092 -17.6108 -15.0996 7.96 -17.6488 -15.283 8.03146 \r\n-17.682 -15.4655 8.1059 -17.7112 -15.6466 8.1836 -17.7398 -15.8273 8.26238 \r\n-17.7722 -16.009 8.33906 -17.8127 -16.1931 8.41047 -17.8629 -16.3784 8.47852 \r\n-17.8898 -16.533 8.60078 -17.9178 -16.6845 8.72865 -17.943 -16.8333 8.86032 \r\n-17.9636 -16.9766 8.99872 -17.9837 -17.1222 9.13465 -18.0004 -17.2713 9.26748 \r\n-18.0114 -17.4193 9.4023 -18.0221 -17.5627 9.54168 -18.0384 -17.6985 9.68783 \r\n-18.0672 -17.8312 9.835 -18.1004 -17.9637 9.98157 -18.1262 -18.0946 10.1309 \r\n-18.1469 -18.2234 10.2829 -18.1715 -18.3499 10.4362 -18.197 -18.4734 10.5918 \r\n-18.2193 -18.594 10.7501 -18.2499 -18.7138 10.9076 -18.2845 -18.8329 11.0648 \r\n-18.3135 -18.9463 11.2271 -18.3551 -19.0584 11.388 -18.3842 -19.1744 11.5484 \r\n-18.4036 -19.2872 11.7128 -18.4388 -19.3949 11.8778 -18.4923 -19.493 12.0438 \r\n-18.5444 -19.583 12.2148 -18.5753 -19.6749 12.3894 -18.581 -19.7621 12.57 \r\n-18.5769 -19.8454 12.7539 -18.5784 -19.9257 12.9384 -18.6005 -20.0027 13.1212 \r\n-18.6431 -20.0759 13.3026 -18.6816 -20.1456 13.4864 -18.7158 -20.2143 13.6716 \r\n-18.7463 -20.2844 13.8567 -18.774 -20.3581 14.0408 -18.8001 -20.4341 14.2243 \r\n-18.8257 -20.5089 14.4083 -18.8512 -20.5797 14.5939 -18.8762 -20.6449 14.7815 \r\n-18.8996 -20.7087 14.9701 -18.9221 -20.7766 15.1577 -18.9467 -20.8474 15.344 \r\n-18.9768 -20.9196 15.5288 -19.0158 -20.9912 15.7118 -19.0671 -21.0607 15.8928 \r\n-19.1318 -21.1262 16.072 -19.1801 -21.186 16.2561 -19.1909 -21.2398 16.4491 \r\n-19.199 -21.2893 16.6432 -19.2143 -21.3338 16.8376 -19.2343 -21.377 17.0318 \r\n-19.2321 -21.4322 17.2247 -19.2477 -21.477 17.4188 -19.2823 -21.509 17.6146 \r\n-19.3161 -21.536 17.8114 -19.3289 -21.566 18.0085 -19.3478 -21.594 18.2052 \r\n-19.3593 -21.6168 18.4027 -19.3348 -21.6397 18.6013 -19.3022 -21.6569 18.8002 \r\n-19.281 -21.6689 18.9989 -19.2641 -21.6896 19.1973 -19.2475 -21.7102 19.3959 \r\n-19.2278 -21.7215 19.5949 -19.1977 -21.7417 19.7913 -19.159 -21.7739 19.9852 \r\n-19.1184 -21.8106 20.1784 -19.0826 -21.8443 20.3728 -19.0543 -21.8709 20.5694 \r\n-19.0234 -21.8996 20.765 -18.9847 -21.9378 20.9578 -18.9546 -21.9813 21.151 \r\n-18.933 -22.0214 21.346 -18.9088 -22.0583 21.5416 -18.8872 -22.0993 21.737 \r\n-18.8949 -22.1322 21.934 -18.9098 -22.1678 22.1306 -18.9216 -22.1949 22.3286 \r\n-18.9166 -22.2272 22.5265 -18.9237 -22.2632 22.7229 -18.9536 -22.2892 22.9193 \r\n-18.9772 -22.3044 23.1176 -19.0038 -22.3272 23.3151 -19.0295 -22.3693 23.5092 \r\n-19.0455 -22.4212 23.7019 -19.0549 -22.4633 23.8975 -19.0672 -22.5163 24.0902 \r\n-19.0741 -22.5618 24.2852 -19.0681 -22.6003 24.4816 -19.0806 -22.6395 24.6775 \r\n-19.1044 -22.6722 24.8742 -19.1236 -22.693 25.0726 -19.1346 -22.7062 25.2723 \r\n-19.1357 -22.717 25.4724 -19.1425 -22.7193 25.6725 -19.1604 -22.714 25.8721 \r\n-19.1568 -22.7258 26.0696 -19.1287 -22.7555 26.2653 -19.087 -22.7929 26.4602 \r\n-19.0424 -22.8278 26.6552 -19.0018 -22.8535 26.851 -18.9632 -22.8717 27.0469 \r\n-18.9236 -22.885 27.2424 -18.8798 -22.8962 27.4369 -18.8286 -22.908 27.6298 \r\n-18.7724 -22.9235 27.8214 -18.7286 -22.9471 28.0153 -18.6948 -22.9754 28.2109 \r\n-18.6582 -23.002 28.406 -18.6081 -23.0213 28.5984 -18.5476 -23.0343 28.7891 \r\n-18.4858 -23.0448 28.9801 -18.4322 -23.0585 29.1728 -18.3954 -23.0822 29.3678 \r\n-18.3721 -23.116 29.5641 -18.3527 -23.1564 29.7595 -18.3392 -23.2059 29.9531 \r\n-18.3319 -23.2625 30.145 -18.3185 -23.2953 30.3414 -18.3024 -23.3145 30.5408 \r\n-18.2913 -23.3429 30.7393 -18.2785 -23.3959 30.931 -18.2525 -23.4732 31.1123 \r\n-18.2181 -23.5693 31.2853 -18.181 -23.6786 31.4523 -18.1468 -23.7954 31.6156 \r\n-18.1213 -23.9142 31.7775 -18.1027 -24.0281 31.9412 -18.0752 -24.1292 32.1112 \r\n-18.0386 -24.2234 32.2845 -18.0038 -24.3258 32.4528 -17.9684 -24.4436 32.6113 \r\n-17.9264 -24.573 32.7609 -17.9095 -24.7032 32.9111 -17.8945 -24.8305 33.063 \r\n-17.8523 -24.9648 33.2077 -17.8334 -25.1037 33.3518 -17.8074 -25.2344 33.5033 \r\n-17.7684 -25.3462 33.6642 -17.7138 -25.432 33.8356 -17.6539 -25.5036 34.0135 \r\n-17.6029 -25.5784 34.1929 -17.5719 -25.6565 34.3748 -17.575 -25.73 34.5601 \r\n-17.5977 -25.8382 34.7272 -17.6198 -25.9101 34.9277 -17.6317 -25.9612 35.1529 \r\n-17.6347 -25.9937 35.3971 -17.6301 -26.01 35.6546 -17.6191 -26.0124 35.9196 \r\n-17.603 -26.0035 36.1864 -17.5832 -25.9854 36.4494 -17.5609 -25.9606 36.7028 \r\n-17.5373 -25.9315 36.9409 -17.5139 -25.9003 37.1581 -17.4919 -25.8695 37.3485 \r\n-17.4725 -25.8415 37.5066 -17.457 -25.8185 37.6266 -17.4468 -25.803 37.7027 \r\n-17.4431 -25.7973 37.7294" };

    private bool isContoursRendered = false;
    private GameObject tempCentreline;

    public struct Point
    {
        //Variable declaration
        //Note: I'm explicitly declaring them as public, but they are public by default. You can use private if you choose.
        public double coordx;
        public double coordy;
        public double coordz;

        //Constructor (not necessary, but helpful)
        public Point(double coordx, double coordy, double coordz)
        {
            this.coordx = coordx;
            this.coordy = coordy;
            this.coordz = coordz;
        }
    }

    private static CentrelineManager _instance;

    

    public static CentrelineManager Instance
    {
        get { return _instance; }
    }

    public GameObject GetActiveCentreline()
    {
        return activeCentreline;
    }

    public void SetActiveCentreline(GameObject centreline)
    {

        if (activeCentreline)
        {
            activeCentreline.GetComponent<CentrelineRenderer>().SetMaterial(centrelineUnactiveMaterial);
            
        }
        if(centreline)
        {
            if (centreline != activeCentreline)
            {
                activeCentreline = centreline;
                
                LAAMeasurementsManager.Instance.DeleteCentrelineMeasuresData();
                LAAMeasurementsManager.Instance.SetCurrentCentrelineMeasures();
                LAAMeasurementsManager.Instance.GenerateCentrelineMeasuresData();
                isContoursRendered = true;
            }
            else
            {
                activeCentreline = centreline;
            }
            
            //activeCentreline.GetComponent<CentrelineRenderer>().SetMaterial(centrelineActiveMaterial);

            
        }
        else
        {
            LAAMeasurementsManager.Instance.DeleteCentrelineMeasuresData();
            activeCentreline = null;
            LAAMeasurementsManager.Instance.activeCentrelineWarningUI.SetActive(true);
            LAAMeasurementsManager.Instance.noContoursWarningUI.SetActive(false);
        }
        
    }

    public void CheckActiveToggleCentrelines()
    {
        activeToggleCentrelinesList.Clear();
        for (int i = 0; centrelinesList.Count > i; i++) {

            if (centrelinesList[i].activeSelf)
            {
                activeToggleCentrelinesList.Add(centrelinesList[i]);
            }

        }
    }


    private void Awake()
    {
        _instance = this;
    }

    // Start is called before the first frame update (Dynamic version)
    /*void Start()
    {
        DirectoryInfo dir = new DirectoryInfo(centrelinesPath);
        FileInfo[] info = dir.GetFiles("*.txt");
        foreach (FileInfo f in info)
        {
            string name = f.Name.Split(".txt")[0];
            GameObject centrelineRender = Instantiate(centrelinesPrefab);
            centrelineRender.name = name + " Render";
            centrelineRender.transform.parent = this.transform;
            centrelineRender.GetComponent<CentrelineRenderer>().SetFilePathCentreline(f.FullName);
            centrelineRender.GetComponent<CentrelineRenderer>().Render();
            centrelineRender.GetComponent<CentrelineRenderer>().SetMaterial(centrelineUnactiveMaterial);

        }
    }*/

    //Hardcoded version
    void Start()
    {

        for (int i = 0; i < centrelineStrings.Length; i++)
        {
            GameObject centrelineRender = Instantiate(centrelinesPrefab);
            centrelineRender.name = "Centreline " + (i+1).ToString() + " Render";
            centrelineRender.transform.parent = this.transform;
            centrelineRender.GetComponent<CentrelineRenderer>().RenderHardcoded(centrelineStrings[i]);
            centrelineRender.GetComponent<CentrelineRenderer>().SetMaterial(centrelineUnactiveMaterial);
            tempCentreline = centrelineRender;

        }
    }

    // Update is called once per frame
    void Update()
    {
        if(!isContoursRendered)
        {
            SetActiveCentreline(tempCentreline);
            
        }
    }
}
